# -*- coding: utf-8 -*-
"""IA2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NM6v9Jad32sHT50d94PLHlYxFtd8CZ1V
"""

import numpy as np
import pandas as pd

#1
arr = np.arange(1,11)
print("Minimum = ", np.min(arr),"\nMaximum = ", np.max(arr),"\nSum = ", np.sum(arr), "\nMean = ", np.mean(arr), "\nStandard Deviation = ", np.std(arr))

#2
def normalize(data,normalized_data):
  for i in data:
    norm= np.mean(i)/max(i)-min(i)
    std= np.std(i)
    normalized_data.append([norm,std])



normalized_data=[]
health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3
normalize(health_data,normalized_data)
print(normalized_data)

#3
stu_marks = np.array([[87,88,12,34,-1],
                      [98,95,76,77,98],
                      [-1,-1,67,-1,-1]])
marks_arr=[]
for i in stu_marks:
  if -1 not in i:
    marks_arr.append(i)
marks=np.array(marks_arr)
avg_score=marks[:,1:].mean(axis=1)
print(avg_score)

#4
print(np.linspace(15,26,24))

#5
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5

i = 0
moving_averages = []
while i < len(arr) - window_size + 1:
    window_average = round(np.sum(daily_closing_prices[
      i:i+window_size]) / window_size, 2)
    moving_averages.append(window_average)
    i += 1

print(moving_averages)

#6

#7
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
print(np.linalg.det(properties_matrix))

#8
arr = np.random.randint(1,10, size = (3,3))
condition = arr > 5
mask = np.array(condition, dtype = bool)
filtered_data = arr[mask]
print(filtered_data)

#9
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}
df = pd.DataFrame(data)
print(df)

#10
data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}
df=pd.DataFrame(data)

department_sales=df.groupby(['Department','Salesperson'])['Sales'].mean().sort_values(ascending=False)
print(department_sales)

#11
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}
df=pd.DataFrame(data)
fruits=df[df['Category']=='Fruit']
category_price_avg=fruits['Price'].mean()
answer=fruits[(fruits['Price']>category_price_avg) & (fruits['Promotion']==False)]

print(answer)

#12
employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}
df1 = pd.DataFrame(employee_data)
# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}
df2 = pd.DataFrame(project_data)
merged_df = pd.merge(df2,df1, on = 'Employee', how = 'left')
print(merged_df)

#13
sports_team=pd.read_csv("/content/Q13_sports_team_stats.csv")

wins=sports_team.groupby("TeamID")['Wins'].sum()
total=sports_team.groupby("TeamID")['GamesPlayed'].sum()
print("Ratio")
print()
print(wins/total)
print()
print("avg_score")
# we need game id and score to calcualte avg score per game.
avg_score=sports_team.groupby(['TeamID','Game Id'])['Score'].mean()
print(avg_score)

#14
customer=pd.read_csv("/content/Q14_customer_purchases.csv")
before=customer[customer['Date']<customer['LoyaltyProgramSignUp']]
before_purchase=before.groupby("CustomerID")['PurchaseAmount'].sum()
mean_before=before.groupby("CustomerID")['PurchaseAmount'].mean()
after=customer[customer['Date']>=customer['LoyaltyProgramSignUp']]
after_purchase=after.groupby("CustomerID")['PurchaseAmount'].sum()
after_mean=after.groupby("CustomerID")['PurchaseAmount'].mean()
print("Before program")
print("total",before_purchase)
print('Mean',mean_before)
print("After Program")
print("total",after_purchase)
print('Mean',after_mean)

#15
data3 = pd.read_csv("/content/Q15_student_grades.csv")
df3 = pd.DataFrame(data3)
avg_sub_score = df3.groupby('Subject')['Grade'].avg()
print(avg_sub_score)